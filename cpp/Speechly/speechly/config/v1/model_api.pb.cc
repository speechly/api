// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: speechly/config/v1/model_api.proto

#include "speechly/config/v1/model_api.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace speechly {
namespace config {
namespace v1 {
        template <typename>
PROTOBUF_CONSTEXPR DownloadModelRequest::DownloadModelRequest(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.app_id_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.config_id_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.model_architecture_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct DownloadModelRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DownloadModelRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DownloadModelRequestDefaultTypeInternal() {}
  union {
    DownloadModelRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DownloadModelRequestDefaultTypeInternal _DownloadModelRequest_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR DownloadModelResponse::DownloadModelResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.chunk_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct DownloadModelResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DownloadModelResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DownloadModelResponseDefaultTypeInternal() {}
  union {
    DownloadModelResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DownloadModelResponseDefaultTypeInternal _DownloadModelResponse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR ListBaseModelsRequest::ListBaseModelsRequest(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.project_id_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.language_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct ListBaseModelsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListBaseModelsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListBaseModelsRequestDefaultTypeInternal() {}
  union {
    ListBaseModelsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListBaseModelsRequestDefaultTypeInternal _ListBaseModelsRequest_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR ListBaseModelsResponse::ListBaseModelsResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.model_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct ListBaseModelsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListBaseModelsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListBaseModelsResponseDefaultTypeInternal() {}
  union {
    ListBaseModelsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListBaseModelsResponseDefaultTypeInternal _ListBaseModelsResponse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR ListLanguagesRequest::ListLanguagesRequest(::_pbi::ConstantInitialized) {}
struct ListLanguagesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListLanguagesRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListLanguagesRequestDefaultTypeInternal() {}
  union {
    ListLanguagesRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListLanguagesRequestDefaultTypeInternal _ListLanguagesRequest_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR ListLanguagesResponse_Language::ListLanguagesResponse_Language(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.code_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct ListLanguagesResponse_LanguageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListLanguagesResponse_LanguageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListLanguagesResponse_LanguageDefaultTypeInternal() {}
  union {
    ListLanguagesResponse_Language _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListLanguagesResponse_LanguageDefaultTypeInternal _ListLanguagesResponse_Language_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR ListLanguagesResponse::ListLanguagesResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.languages_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct ListLanguagesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListLanguagesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListLanguagesResponseDefaultTypeInternal() {}
  union {
    ListLanguagesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListLanguagesResponseDefaultTypeInternal _ListLanguagesResponse_default_instance_;
}  // namespace v1
}  // namespace config
}  // namespace speechly
static ::_pb::Metadata file_level_metadata_speechly_2fconfig_2fv1_2fmodel_5fapi_2eproto[7];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_speechly_2fconfig_2fv1_2fmodel_5fapi_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_speechly_2fconfig_2fv1_2fmodel_5fapi_2eproto = nullptr;
const ::uint32_t TableStruct_speechly_2fconfig_2fv1_2fmodel_5fapi_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::speechly::config::v1::DownloadModelRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::speechly::config::v1::DownloadModelRequest, _impl_.app_id_),
    PROTOBUF_FIELD_OFFSET(::speechly::config::v1::DownloadModelRequest, _impl_.config_id_),
    PROTOBUF_FIELD_OFFSET(::speechly::config::v1::DownloadModelRequest, _impl_.model_architecture_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::speechly::config::v1::DownloadModelResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::speechly::config::v1::DownloadModelResponse, _impl_.chunk_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::speechly::config::v1::ListBaseModelsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::speechly::config::v1::ListBaseModelsRequest, _impl_.project_id_),
    PROTOBUF_FIELD_OFFSET(::speechly::config::v1::ListBaseModelsRequest, _impl_.language_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::speechly::config::v1::ListBaseModelsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::speechly::config::v1::ListBaseModelsResponse, _impl_.model_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::speechly::config::v1::ListLanguagesRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::speechly::config::v1::ListLanguagesResponse_Language, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::speechly::config::v1::ListLanguagesResponse_Language, _impl_.code_),
    PROTOBUF_FIELD_OFFSET(::speechly::config::v1::ListLanguagesResponse_Language, _impl_.name_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::speechly::config::v1::ListLanguagesResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::speechly::config::v1::ListLanguagesResponse, _impl_.languages_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::speechly::config::v1::DownloadModelRequest)},
        {11, -1, -1, sizeof(::speechly::config::v1::DownloadModelResponse)},
        {20, -1, -1, sizeof(::speechly::config::v1::ListBaseModelsRequest)},
        {30, -1, -1, sizeof(::speechly::config::v1::ListBaseModelsResponse)},
        {39, -1, -1, sizeof(::speechly::config::v1::ListLanguagesRequest)},
        {47, -1, -1, sizeof(::speechly::config::v1::ListLanguagesResponse_Language)},
        {57, -1, -1, sizeof(::speechly::config::v1::ListLanguagesResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::speechly::config::v1::_DownloadModelRequest_default_instance_._instance,
    &::speechly::config::v1::_DownloadModelResponse_default_instance_._instance,
    &::speechly::config::v1::_ListBaseModelsRequest_default_instance_._instance,
    &::speechly::config::v1::_ListBaseModelsResponse_default_instance_._instance,
    &::speechly::config::v1::_ListLanguagesRequest_default_instance_._instance,
    &::speechly::config::v1::_ListLanguagesResponse_Language_default_instance_._instance,
    &::speechly::config::v1::_ListLanguagesResponse_default_instance_._instance,
};
const char descriptor_table_protodef_speechly_2fconfig_2fv1_2fmodel_5fapi_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\"speechly/config/v1/model_api.proto\022\022sp"
    "eechly.config.v1\032\036speechly/config/v1/mod"
    "el.proto\"\241\002\n\024DownloadModelRequest\022\016\n\006app"
    "_id\030\001 \001(\t\022\021\n\tconfig_id\030\002 \001(\t\022V\n\022model_ar"
    "chitecture\030\003 \001(\0162:.speechly.config.v1.Do"
    "wnloadModelRequest.ModelArchitecture\"\215\001\n"
    "\021ModelArchitecture\022\036\n\032MODEL_ARCHITECTURE"
    "_INVALID\020\000\022\032\n\026MODEL_ARCHITECTURE_ORT\020\001\022\035"
    "\n\031MODEL_ARCHITECTURE_COREML\020\002\022\035\n\031MODEL_A"
    "RCHITECTURE_TFLITE\020\003\"&\n\025DownloadModelRes"
    "ponse\022\r\n\005chunk\030\001 \001(\014\"=\n\025ListBaseModelsRe"
    "quest\022\022\n\nproject_id\030\001 \001(\t\022\020\n\010language\030\002 "
    "\001(\t\"F\n\026ListBaseModelsResponse\022,\n\005model\030\001"
    " \003(\0132\035.speechly.config.v1.BaseModel\"\026\n\024L"
    "istLanguagesRequest\"\206\001\n\025ListLanguagesRes"
    "ponse\022E\n\tlanguages\030\001 \003(\01322.speechly.conf"
    "ig.v1.ListLanguagesResponse.Language\032&\n\010"
    "Language\022\014\n\004code\030\001 \001(\t\022\014\n\004name\030\002 \001(\t2\301\002\n"
    "\010ModelAPI\022f\n\rDownloadModel\022(.speechly.co"
    "nfig.v1.DownloadModelRequest\032).speechly."
    "config.v1.DownloadModelResponse0\001\022g\n\016Lis"
    "tBaseModels\022).speechly.config.v1.ListBas"
    "eModelsRequest\032*.speechly.config.v1.List"
    "BaseModelsResponse\022d\n\rListLanguages\022(.sp"
    "eechly.config.v1.ListLanguagesRequest\032)."
    "speechly.config.v1.ListLanguagesResponse"
    "Bv\n\026com.speechly.config.v1B\rModelApiProt"
    "oP\001Z\033speechly/config/v1;configv1\242\002\003SCX\252\002"
    "\022Speechly.Config.V1\312\002\022Speechly\\Config\\V1"
    "b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_speechly_2fconfig_2fv1_2fmodel_5fapi_2eproto_deps[1] =
    {
        &::descriptor_table_speechly_2fconfig_2fv1_2fmodel_2eproto,
};
static ::absl::once_flag descriptor_table_speechly_2fconfig_2fv1_2fmodel_5fapi_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_speechly_2fconfig_2fv1_2fmodel_5fapi_2eproto = {
    false,
    false,
    1168,
    descriptor_table_protodef_speechly_2fconfig_2fv1_2fmodel_5fapi_2eproto,
    "speechly/config/v1/model_api.proto",
    &descriptor_table_speechly_2fconfig_2fv1_2fmodel_5fapi_2eproto_once,
    descriptor_table_speechly_2fconfig_2fv1_2fmodel_5fapi_2eproto_deps,
    1,
    7,
    schemas,
    file_default_instances,
    TableStruct_speechly_2fconfig_2fv1_2fmodel_5fapi_2eproto::offsets,
    file_level_metadata_speechly_2fconfig_2fv1_2fmodel_5fapi_2eproto,
    file_level_enum_descriptors_speechly_2fconfig_2fv1_2fmodel_5fapi_2eproto,
    file_level_service_descriptors_speechly_2fconfig_2fv1_2fmodel_5fapi_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_speechly_2fconfig_2fv1_2fmodel_5fapi_2eproto_getter() {
  return &descriptor_table_speechly_2fconfig_2fv1_2fmodel_5fapi_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_speechly_2fconfig_2fv1_2fmodel_5fapi_2eproto(&descriptor_table_speechly_2fconfig_2fv1_2fmodel_5fapi_2eproto);
namespace speechly {
namespace config {
namespace v1 {
const ::google::protobuf::EnumDescriptor* DownloadModelRequest_ModelArchitecture_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_speechly_2fconfig_2fv1_2fmodel_5fapi_2eproto);
  return file_level_enum_descriptors_speechly_2fconfig_2fv1_2fmodel_5fapi_2eproto[0];
}
bool DownloadModelRequest_ModelArchitecture_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr DownloadModelRequest_ModelArchitecture DownloadModelRequest::MODEL_ARCHITECTURE_INVALID;
constexpr DownloadModelRequest_ModelArchitecture DownloadModelRequest::MODEL_ARCHITECTURE_ORT;
constexpr DownloadModelRequest_ModelArchitecture DownloadModelRequest::MODEL_ARCHITECTURE_COREML;
constexpr DownloadModelRequest_ModelArchitecture DownloadModelRequest::MODEL_ARCHITECTURE_TFLITE;
constexpr DownloadModelRequest_ModelArchitecture DownloadModelRequest::ModelArchitecture_MIN;
constexpr DownloadModelRequest_ModelArchitecture DownloadModelRequest::ModelArchitecture_MAX;
constexpr int DownloadModelRequest::ModelArchitecture_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class DownloadModelRequest::_Internal {
 public:
};

DownloadModelRequest::DownloadModelRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:speechly.config.v1.DownloadModelRequest)
}
DownloadModelRequest::DownloadModelRequest(const DownloadModelRequest& from) : ::google::protobuf::Message() {
  DownloadModelRequest* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.app_id_){},
      decltype(_impl_.config_id_){},
      decltype(_impl_.model_architecture_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.app_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.app_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_app_id().empty()) {
    _this->_impl_.app_id_.Set(from._internal_app_id(), _this->GetArenaForAllocation());
  }
  _impl_.config_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.config_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_config_id().empty()) {
    _this->_impl_.config_id_.Set(from._internal_config_id(), _this->GetArenaForAllocation());
  }
  _this->_impl_.model_architecture_ = from._impl_.model_architecture_;

  // @@protoc_insertion_point(copy_constructor:speechly.config.v1.DownloadModelRequest)
}
inline void DownloadModelRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.app_id_){},
      decltype(_impl_.config_id_){},
      decltype(_impl_.model_architecture_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.app_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.app_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.config_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.config_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
DownloadModelRequest::~DownloadModelRequest() {
  // @@protoc_insertion_point(destructor:speechly.config.v1.DownloadModelRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DownloadModelRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.app_id_.Destroy();
  _impl_.config_id_.Destroy();
}
void DownloadModelRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void DownloadModelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:speechly.config.v1.DownloadModelRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.app_id_.ClearToEmpty();
  _impl_.config_id_.ClearToEmpty();
  _impl_.model_architecture_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DownloadModelRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 63, 2> DownloadModelRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_DownloadModelRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string app_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DownloadModelRequest, _impl_.app_id_)}},
    // string config_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(DownloadModelRequest, _impl_.config_id_)}},
    // .speechly.config.v1.DownloadModelRequest.ModelArchitecture model_architecture = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DownloadModelRequest, _impl_.model_architecture_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(DownloadModelRequest, _impl_.model_architecture_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string app_id = 1;
    {PROTOBUF_FIELD_OFFSET(DownloadModelRequest, _impl_.app_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string config_id = 2;
    {PROTOBUF_FIELD_OFFSET(DownloadModelRequest, _impl_.config_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .speechly.config.v1.DownloadModelRequest.ModelArchitecture model_architecture = 3;
    {PROTOBUF_FIELD_OFFSET(DownloadModelRequest, _impl_.model_architecture_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
    "\47\6\11\0\0\0\0\0"
    "speechly.config.v1.DownloadModelRequest"
    "app_id"
    "config_id"
  }},
};

::uint8_t* DownloadModelRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:speechly.config.v1.DownloadModelRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string app_id = 1;
  if (!this->_internal_app_id().empty()) {
    const std::string& _s = this->_internal_app_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "speechly.config.v1.DownloadModelRequest.app_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string config_id = 2;
  if (!this->_internal_config_id().empty()) {
    const std::string& _s = this->_internal_config_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "speechly.config.v1.DownloadModelRequest.config_id");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // .speechly.config.v1.DownloadModelRequest.ModelArchitecture model_architecture = 3;
  if (this->_internal_model_architecture() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        3, this->_internal_model_architecture(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:speechly.config.v1.DownloadModelRequest)
  return target;
}

::size_t DownloadModelRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:speechly.config.v1.DownloadModelRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string app_id = 1;
  if (!this->_internal_app_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_app_id());
  }

  // string config_id = 2;
  if (!this->_internal_config_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_config_id());
  }

  // .speechly.config.v1.DownloadModelRequest.ModelArchitecture model_architecture = 3;
  if (this->_internal_model_architecture() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_model_architecture());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DownloadModelRequest::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    DownloadModelRequest::MergeImpl
};
const ::google::protobuf::Message::ClassData*DownloadModelRequest::GetClassData() const { return &_class_data_; }


void DownloadModelRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DownloadModelRequest*>(&to_msg);
  auto& from = static_cast<const DownloadModelRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:speechly.config.v1.DownloadModelRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_app_id().empty()) {
    _this->_internal_set_app_id(from._internal_app_id());
  }
  if (!from._internal_config_id().empty()) {
    _this->_internal_set_config_id(from._internal_config_id());
  }
  if (from._internal_model_architecture() != 0) {
    _this->_internal_set_model_architecture(from._internal_model_architecture());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DownloadModelRequest::CopyFrom(const DownloadModelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:speechly.config.v1.DownloadModelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DownloadModelRequest::IsInitialized() const {
  return true;
}

void DownloadModelRequest::InternalSwap(DownloadModelRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.app_id_, lhs_arena,
                                       &other->_impl_.app_id_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.config_id_, lhs_arena,
                                       &other->_impl_.config_id_, rhs_arena);
  swap(_impl_.model_architecture_, other->_impl_.model_architecture_);
}

::google::protobuf::Metadata DownloadModelRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_speechly_2fconfig_2fv1_2fmodel_5fapi_2eproto_getter, &descriptor_table_speechly_2fconfig_2fv1_2fmodel_5fapi_2eproto_once,
      file_level_metadata_speechly_2fconfig_2fv1_2fmodel_5fapi_2eproto[0]);
}
// ===================================================================

class DownloadModelResponse::_Internal {
 public:
};

DownloadModelResponse::DownloadModelResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:speechly.config.v1.DownloadModelResponse)
}
DownloadModelResponse::DownloadModelResponse(const DownloadModelResponse& from) : ::google::protobuf::Message() {
  DownloadModelResponse* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.chunk_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.chunk_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.chunk_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_chunk().empty()) {
    _this->_impl_.chunk_.Set(from._internal_chunk(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:speechly.config.v1.DownloadModelResponse)
}
inline void DownloadModelResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.chunk_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.chunk_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.chunk_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
DownloadModelResponse::~DownloadModelResponse() {
  // @@protoc_insertion_point(destructor:speechly.config.v1.DownloadModelResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DownloadModelResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.chunk_.Destroy();
}
void DownloadModelResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void DownloadModelResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:speechly.config.v1.DownloadModelResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.chunk_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DownloadModelResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> DownloadModelResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_DownloadModelResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bytes chunk = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DownloadModelResponse, _impl_.chunk_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes chunk = 1;
    {PROTOBUF_FIELD_OFFSET(DownloadModelResponse, _impl_.chunk_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* DownloadModelResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:speechly.config.v1.DownloadModelResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes chunk = 1;
  if (!this->_internal_chunk().empty()) {
    const std::string& _s = this->_internal_chunk();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:speechly.config.v1.DownloadModelResponse)
  return target;
}

::size_t DownloadModelResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:speechly.config.v1.DownloadModelResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes chunk = 1;
  if (!this->_internal_chunk().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_chunk());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DownloadModelResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    DownloadModelResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*DownloadModelResponse::GetClassData() const { return &_class_data_; }


void DownloadModelResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DownloadModelResponse*>(&to_msg);
  auto& from = static_cast<const DownloadModelResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:speechly.config.v1.DownloadModelResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_chunk().empty()) {
    _this->_internal_set_chunk(from._internal_chunk());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DownloadModelResponse::CopyFrom(const DownloadModelResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:speechly.config.v1.DownloadModelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DownloadModelResponse::IsInitialized() const {
  return true;
}

void DownloadModelResponse::InternalSwap(DownloadModelResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.chunk_, lhs_arena,
                                       &other->_impl_.chunk_, rhs_arena);
}

::google::protobuf::Metadata DownloadModelResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_speechly_2fconfig_2fv1_2fmodel_5fapi_2eproto_getter, &descriptor_table_speechly_2fconfig_2fv1_2fmodel_5fapi_2eproto_once,
      file_level_metadata_speechly_2fconfig_2fv1_2fmodel_5fapi_2eproto[1]);
}
// ===================================================================

class ListBaseModelsRequest::_Internal {
 public:
};

ListBaseModelsRequest::ListBaseModelsRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:speechly.config.v1.ListBaseModelsRequest)
}
ListBaseModelsRequest::ListBaseModelsRequest(const ListBaseModelsRequest& from) : ::google::protobuf::Message() {
  ListBaseModelsRequest* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.project_id_){},
      decltype(_impl_.language_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.project_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.project_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_project_id().empty()) {
    _this->_impl_.project_id_.Set(from._internal_project_id(), _this->GetArenaForAllocation());
  }
  _impl_.language_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.language_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_language().empty()) {
    _this->_impl_.language_.Set(from._internal_language(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:speechly.config.v1.ListBaseModelsRequest)
}
inline void ListBaseModelsRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.project_id_){},
      decltype(_impl_.language_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.project_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.project_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.language_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.language_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
ListBaseModelsRequest::~ListBaseModelsRequest() {
  // @@protoc_insertion_point(destructor:speechly.config.v1.ListBaseModelsRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ListBaseModelsRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.project_id_.Destroy();
  _impl_.language_.Destroy();
}
void ListBaseModelsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void ListBaseModelsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:speechly.config.v1.ListBaseModelsRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.project_id_.ClearToEmpty();
  _impl_.language_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ListBaseModelsRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 67, 2> ListBaseModelsRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ListBaseModelsRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string language = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ListBaseModelsRequest, _impl_.language_)}},
    // string project_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ListBaseModelsRequest, _impl_.project_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string project_id = 1;
    {PROTOBUF_FIELD_OFFSET(ListBaseModelsRequest, _impl_.project_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string language = 2;
    {PROTOBUF_FIELD_OFFSET(ListBaseModelsRequest, _impl_.language_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\50\12\10\0\0\0\0\0"
    "speechly.config.v1.ListBaseModelsRequest"
    "project_id"
    "language"
  }},
};

::uint8_t* ListBaseModelsRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:speechly.config.v1.ListBaseModelsRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string project_id = 1;
  if (!this->_internal_project_id().empty()) {
    const std::string& _s = this->_internal_project_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "speechly.config.v1.ListBaseModelsRequest.project_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string language = 2;
  if (!this->_internal_language().empty()) {
    const std::string& _s = this->_internal_language();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "speechly.config.v1.ListBaseModelsRequest.language");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:speechly.config.v1.ListBaseModelsRequest)
  return target;
}

::size_t ListBaseModelsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:speechly.config.v1.ListBaseModelsRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project_id = 1;
  if (!this->_internal_project_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_project_id());
  }

  // string language = 2;
  if (!this->_internal_language().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_language());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ListBaseModelsRequest::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    ListBaseModelsRequest::MergeImpl
};
const ::google::protobuf::Message::ClassData*ListBaseModelsRequest::GetClassData() const { return &_class_data_; }


void ListBaseModelsRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ListBaseModelsRequest*>(&to_msg);
  auto& from = static_cast<const ListBaseModelsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:speechly.config.v1.ListBaseModelsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_project_id().empty()) {
    _this->_internal_set_project_id(from._internal_project_id());
  }
  if (!from._internal_language().empty()) {
    _this->_internal_set_language(from._internal_language());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ListBaseModelsRequest::CopyFrom(const ListBaseModelsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:speechly.config.v1.ListBaseModelsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ListBaseModelsRequest::IsInitialized() const {
  return true;
}

void ListBaseModelsRequest::InternalSwap(ListBaseModelsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.project_id_, lhs_arena,
                                       &other->_impl_.project_id_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.language_, lhs_arena,
                                       &other->_impl_.language_, rhs_arena);
}

::google::protobuf::Metadata ListBaseModelsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_speechly_2fconfig_2fv1_2fmodel_5fapi_2eproto_getter, &descriptor_table_speechly_2fconfig_2fv1_2fmodel_5fapi_2eproto_once,
      file_level_metadata_speechly_2fconfig_2fv1_2fmodel_5fapi_2eproto[2]);
}
// ===================================================================

class ListBaseModelsResponse::_Internal {
 public:
};

void ListBaseModelsResponse::clear_model() {
  _internal_mutable_model()->Clear();
}
ListBaseModelsResponse::ListBaseModelsResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:speechly.config.v1.ListBaseModelsResponse)
}
ListBaseModelsResponse::ListBaseModelsResponse(const ListBaseModelsResponse& from) : ::google::protobuf::Message() {
  ListBaseModelsResponse* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.model_){from._impl_.model_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:speechly.config.v1.ListBaseModelsResponse)
}
inline void ListBaseModelsResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.model_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
ListBaseModelsResponse::~ListBaseModelsResponse() {
  // @@protoc_insertion_point(destructor:speechly.config.v1.ListBaseModelsResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ListBaseModelsResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.model_.~RepeatedPtrField();
}
void ListBaseModelsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void ListBaseModelsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:speechly.config.v1.ListBaseModelsResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_model()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ListBaseModelsResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> ListBaseModelsResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ListBaseModelsResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .speechly.config.v1.BaseModel model = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ListBaseModelsResponse, _impl_.model_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .speechly.config.v1.BaseModel model = 1;
    {PROTOBUF_FIELD_OFFSET(ListBaseModelsResponse, _impl_.model_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::speechly::config::v1::BaseModel>()},
  }}, {{
  }},
};

::uint8_t* ListBaseModelsResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:speechly.config.v1.ListBaseModelsResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .speechly.config.v1.BaseModel model = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_model_size()); i < n; i++) {
    const auto& repfield = this->_internal_model().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:speechly.config.v1.ListBaseModelsResponse)
  return target;
}

::size_t ListBaseModelsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:speechly.config.v1.ListBaseModelsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .speechly.config.v1.BaseModel model = 1;
  total_size += 1UL * this->_internal_model_size();
  for (const auto& msg : this->_internal_model()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ListBaseModelsResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    ListBaseModelsResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*ListBaseModelsResponse::GetClassData() const { return &_class_data_; }


void ListBaseModelsResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ListBaseModelsResponse*>(&to_msg);
  auto& from = static_cast<const ListBaseModelsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:speechly.config.v1.ListBaseModelsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_model()->MergeFrom(from._internal_model());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ListBaseModelsResponse::CopyFrom(const ListBaseModelsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:speechly.config.v1.ListBaseModelsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ListBaseModelsResponse::IsInitialized() const {
  return true;
}

void ListBaseModelsResponse::InternalSwap(ListBaseModelsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.model_.InternalSwap(&other->_impl_.model_);
}

::google::protobuf::Metadata ListBaseModelsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_speechly_2fconfig_2fv1_2fmodel_5fapi_2eproto_getter, &descriptor_table_speechly_2fconfig_2fv1_2fmodel_5fapi_2eproto_once,
      file_level_metadata_speechly_2fconfig_2fv1_2fmodel_5fapi_2eproto[3]);
}
// ===================================================================

class ListLanguagesRequest::_Internal {
 public:
};

ListLanguagesRequest::ListLanguagesRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:speechly.config.v1.ListLanguagesRequest)
}
ListLanguagesRequest::ListLanguagesRequest(const ListLanguagesRequest& from) : ::google::protobuf::internal::ZeroFieldsBase() {
  ListLanguagesRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:speechly.config.v1.ListLanguagesRequest)
}




const ::google::protobuf::Message::ClassData ListLanguagesRequest::_class_data_ = {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl,
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl,
};
const ::google::protobuf::Message::ClassData*ListLanguagesRequest::GetClassData() const { return &_class_data_; }







::google::protobuf::Metadata ListLanguagesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_speechly_2fconfig_2fv1_2fmodel_5fapi_2eproto_getter, &descriptor_table_speechly_2fconfig_2fv1_2fmodel_5fapi_2eproto_once,
      file_level_metadata_speechly_2fconfig_2fv1_2fmodel_5fapi_2eproto[4]);
}
// ===================================================================

class ListLanguagesResponse_Language::_Internal {
 public:
};

ListLanguagesResponse_Language::ListLanguagesResponse_Language(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:speechly.config.v1.ListLanguagesResponse.Language)
}
ListLanguagesResponse_Language::ListLanguagesResponse_Language(const ListLanguagesResponse_Language& from) : ::google::protobuf::Message() {
  ListLanguagesResponse_Language* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.code_){},
      decltype(_impl_.name_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.code_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_code().empty()) {
    _this->_impl_.code_.Set(from._internal_code(), _this->GetArenaForAllocation());
  }
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:speechly.config.v1.ListLanguagesResponse.Language)
}
inline void ListLanguagesResponse_Language::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.code_){},
      decltype(_impl_.name_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.code_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
ListLanguagesResponse_Language::~ListLanguagesResponse_Language() {
  // @@protoc_insertion_point(destructor:speechly.config.v1.ListLanguagesResponse.Language)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ListLanguagesResponse_Language::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.code_.Destroy();
  _impl_.name_.Destroy();
}
void ListLanguagesResponse_Language::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void ListLanguagesResponse_Language::Clear() {
// @@protoc_insertion_point(message_clear_start:speechly.config.v1.ListLanguagesResponse.Language)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.code_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ListLanguagesResponse_Language::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 66, 2> ListLanguagesResponse_Language::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ListLanguagesResponse_Language_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ListLanguagesResponse_Language, _impl_.name_)}},
    // string code = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ListLanguagesResponse_Language, _impl_.code_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string code = 1;
    {PROTOBUF_FIELD_OFFSET(ListLanguagesResponse_Language, _impl_.code_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 2;
    {PROTOBUF_FIELD_OFFSET(ListLanguagesResponse_Language, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\61\4\4\0\0\0\0\0"
    "speechly.config.v1.ListLanguagesResponse.Language"
    "code"
    "name"
  }},
};

::uint8_t* ListLanguagesResponse_Language::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:speechly.config.v1.ListLanguagesResponse.Language)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string code = 1;
  if (!this->_internal_code().empty()) {
    const std::string& _s = this->_internal_code();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "speechly.config.v1.ListLanguagesResponse.Language.code");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "speechly.config.v1.ListLanguagesResponse.Language.name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:speechly.config.v1.ListLanguagesResponse.Language)
  return target;
}

::size_t ListLanguagesResponse_Language::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:speechly.config.v1.ListLanguagesResponse.Language)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string code = 1;
  if (!this->_internal_code().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_code());
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ListLanguagesResponse_Language::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    ListLanguagesResponse_Language::MergeImpl
};
const ::google::protobuf::Message::ClassData*ListLanguagesResponse_Language::GetClassData() const { return &_class_data_; }


void ListLanguagesResponse_Language::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ListLanguagesResponse_Language*>(&to_msg);
  auto& from = static_cast<const ListLanguagesResponse_Language&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:speechly.config.v1.ListLanguagesResponse.Language)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_code().empty()) {
    _this->_internal_set_code(from._internal_code());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ListLanguagesResponse_Language::CopyFrom(const ListLanguagesResponse_Language& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:speechly.config.v1.ListLanguagesResponse.Language)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ListLanguagesResponse_Language::IsInitialized() const {
  return true;
}

void ListLanguagesResponse_Language::InternalSwap(ListLanguagesResponse_Language* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.code_, lhs_arena,
                                       &other->_impl_.code_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, lhs_arena,
                                       &other->_impl_.name_, rhs_arena);
}

::google::protobuf::Metadata ListLanguagesResponse_Language::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_speechly_2fconfig_2fv1_2fmodel_5fapi_2eproto_getter, &descriptor_table_speechly_2fconfig_2fv1_2fmodel_5fapi_2eproto_once,
      file_level_metadata_speechly_2fconfig_2fv1_2fmodel_5fapi_2eproto[5]);
}
// ===================================================================

class ListLanguagesResponse::_Internal {
 public:
};

ListLanguagesResponse::ListLanguagesResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:speechly.config.v1.ListLanguagesResponse)
}
ListLanguagesResponse::ListLanguagesResponse(const ListLanguagesResponse& from) : ::google::protobuf::Message() {
  ListLanguagesResponse* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.languages_){from._impl_.languages_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:speechly.config.v1.ListLanguagesResponse)
}
inline void ListLanguagesResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.languages_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
ListLanguagesResponse::~ListLanguagesResponse() {
  // @@protoc_insertion_point(destructor:speechly.config.v1.ListLanguagesResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ListLanguagesResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.languages_.~RepeatedPtrField();
}
void ListLanguagesResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void ListLanguagesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:speechly.config.v1.ListLanguagesResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_languages()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ListLanguagesResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> ListLanguagesResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ListLanguagesResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .speechly.config.v1.ListLanguagesResponse.Language languages = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ListLanguagesResponse, _impl_.languages_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .speechly.config.v1.ListLanguagesResponse.Language languages = 1;
    {PROTOBUF_FIELD_OFFSET(ListLanguagesResponse, _impl_.languages_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::speechly::config::v1::ListLanguagesResponse_Language>()},
  }}, {{
  }},
};

::uint8_t* ListLanguagesResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:speechly.config.v1.ListLanguagesResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .speechly.config.v1.ListLanguagesResponse.Language languages = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_languages_size()); i < n; i++) {
    const auto& repfield = this->_internal_languages().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:speechly.config.v1.ListLanguagesResponse)
  return target;
}

::size_t ListLanguagesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:speechly.config.v1.ListLanguagesResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .speechly.config.v1.ListLanguagesResponse.Language languages = 1;
  total_size += 1UL * this->_internal_languages_size();
  for (const auto& msg : this->_internal_languages()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ListLanguagesResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    ListLanguagesResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*ListLanguagesResponse::GetClassData() const { return &_class_data_; }


void ListLanguagesResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ListLanguagesResponse*>(&to_msg);
  auto& from = static_cast<const ListLanguagesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:speechly.config.v1.ListLanguagesResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_languages()->MergeFrom(from._internal_languages());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ListLanguagesResponse::CopyFrom(const ListLanguagesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:speechly.config.v1.ListLanguagesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ListLanguagesResponse::IsInitialized() const {
  return true;
}

void ListLanguagesResponse::InternalSwap(ListLanguagesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.languages_.InternalSwap(&other->_impl_.languages_);
}

::google::protobuf::Metadata ListLanguagesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_speechly_2fconfig_2fv1_2fmodel_5fapi_2eproto_getter, &descriptor_table_speechly_2fconfig_2fv1_2fmodel_5fapi_2eproto_once,
      file_level_metadata_speechly_2fconfig_2fv1_2fmodel_5fapi_2eproto[6]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace config
}  // namespace speechly
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
