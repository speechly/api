// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: speechly/sal/v1/evaluator_api.proto

package salv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Top-level message sent by the client for the `Texts` method.
type TextsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID of the app that is used for recognising.
	AppId string `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	// The language of the text sent in the request as a BCP-47 language tag (e.g. "en-US").
	// Required.
	LanguageCode string `protobuf:"bytes,2,opt,name=language_code,json=languageCode,proto3" json:"language_code,omitempty"`
	// A list of texts to recognise.
	// Required.
	Texts []string `protobuf:"bytes,3,rep,name=texts,proto3" json:"texts,omitempty"`
}

func (x *TextsRequest) Reset() {
	*x = TextsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_speechly_sal_v1_evaluator_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextsRequest) ProtoMessage() {}

func (x *TextsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_speechly_sal_v1_evaluator_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextsRequest.ProtoReflect.Descriptor instead.
func (*TextsRequest) Descriptor() ([]byte, []int) {
	return file_speechly_sal_v1_evaluator_api_proto_rawDescGZIP(), []int{0}
}

func (x *TextsRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *TextsRequest) GetLanguageCode() string {
	if x != nil {
		return x.LanguageCode
	}
	return ""
}

func (x *TextsRequest) GetTexts() []string {
	if x != nil {
		return x.Texts
	}
	return nil
}

// Top-level message sent by the client for the `Texts` method.
type TextsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A list of annotated texts.
	// Required.
	AnnotatedTexts []string `protobuf:"bytes,2,rep,name=annotated_texts,json=annotatedTexts,proto3" json:"annotated_texts,omitempty"`
}

func (x *TextsResponse) Reset() {
	*x = TextsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_speechly_sal_v1_evaluator_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextsResponse) ProtoMessage() {}

func (x *TextsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_speechly_sal_v1_evaluator_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextsResponse.ProtoReflect.Descriptor instead.
func (*TextsResponse) Descriptor() ([]byte, []int) {
	return file_speechly_sal_v1_evaluator_api_proto_rawDescGZIP(), []int{1}
}

func (x *TextsResponse) GetAnnotatedTexts() []string {
	if x != nil {
		return x.AnnotatedTexts
	}
	return nil
}

// Top-level message sent by the client for the `EvalTexts` method.
type EvalTextsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID of the app that is used for evaluating.
	AppId string `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	// The language of the text sent in the request as a BCP-47 language tag (e.g. "en-US").
	// Required.
	LanguageCode string `protobuf:"bytes,2,opt,name=language_code,json=languageCode,proto3" json:"language_code,omitempty"`
	// Required.
	Pairs []*EvalTextsRequest_EvaluationPair `protobuf:"bytes,3,rep,name=pairs,proto3" json:"pairs,omitempty"`
}

func (x *EvalTextsRequest) Reset() {
	*x = EvalTextsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_speechly_sal_v1_evaluator_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvalTextsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvalTextsRequest) ProtoMessage() {}

func (x *EvalTextsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_speechly_sal_v1_evaluator_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvalTextsRequest.ProtoReflect.Descriptor instead.
func (*EvalTextsRequest) Descriptor() ([]byte, []int) {
	return file_speechly_sal_v1_evaluator_api_proto_rawDescGZIP(), []int{2}
}

func (x *EvalTextsRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *EvalTextsRequest) GetLanguageCode() string {
	if x != nil {
		return x.LanguageCode
	}
	return ""
}

func (x *EvalTextsRequest) GetPairs() []*EvalTextsRequest_EvaluationPair {
	if x != nil {
		return x.Pairs
	}
	return nil
}

// Top-level message sent by the server for the `EvalTexts` method.
type EvalTextsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// An evaluation report.
	Report string `protobuf:"bytes,1,opt,name=report,proto3" json:"report,omitempty"`
}

func (x *EvalTextsResponse) Reset() {
	*x = EvalTextsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_speechly_sal_v1_evaluator_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvalTextsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvalTextsResponse) ProtoMessage() {}

func (x *EvalTextsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_speechly_sal_v1_evaluator_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvalTextsResponse.ProtoReflect.Descriptor instead.
func (*EvalTextsResponse) Descriptor() ([]byte, []int) {
	return file_speechly_sal_v1_evaluator_api_proto_rawDescGZIP(), []int{3}
}

func (x *EvalTextsResponse) GetReport() string {
	if x != nil {
		return x.Report
	}
	return ""
}

// Describes a single text and ground truth pair.
type EvalTextsRequest_EvaluationPair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The text to recognise.
	// Required.
	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	// The ground truth text to compare against.
	// Required.
	GroundTruthText string `protobuf:"bytes,2,opt,name=ground_truth_text,json=groundTruthText,proto3" json:"ground_truth_text,omitempty"`
}

func (x *EvalTextsRequest_EvaluationPair) Reset() {
	*x = EvalTextsRequest_EvaluationPair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_speechly_sal_v1_evaluator_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvalTextsRequest_EvaluationPair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvalTextsRequest_EvaluationPair) ProtoMessage() {}

func (x *EvalTextsRequest_EvaluationPair) ProtoReflect() protoreflect.Message {
	mi := &file_speechly_sal_v1_evaluator_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvalTextsRequest_EvaluationPair.ProtoReflect.Descriptor instead.
func (*EvalTextsRequest_EvaluationPair) Descriptor() ([]byte, []int) {
	return file_speechly_sal_v1_evaluator_api_proto_rawDescGZIP(), []int{2, 0}
}

func (x *EvalTextsRequest_EvaluationPair) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *EvalTextsRequest_EvaluationPair) GetGroundTruthText() string {
	if x != nil {
		return x.GroundTruthText
	}
	return ""
}

var File_speechly_sal_v1_evaluator_api_proto protoreflect.FileDescriptor

var file_speechly_sal_v1_evaluator_api_proto_rawDesc = []byte{
	0x0a, 0x23, 0x73, 0x70, 0x65, 0x65, 0x63, 0x68, 0x6c, 0x79, 0x2f, 0x73, 0x61, 0x6c, 0x2f, 0x76,
	0x31, 0x2f, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x73, 0x70, 0x65, 0x65, 0x63, 0x68, 0x6c, 0x79, 0x2e,
	0x73, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x22, 0x60, 0x0a, 0x0c, 0x54, 0x65, 0x78, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x23, 0x0a,
	0x0d, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x65, 0x78, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x65, 0x78, 0x74, 0x73, 0x22, 0x38, 0x0a, 0x0d, 0x54, 0x65, 0x78, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0e, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x64, 0x54, 0x65, 0x78,
	0x74, 0x73, 0x22, 0xe8, 0x01, 0x0a, 0x10, 0x45, 0x76, 0x61, 0x6c, 0x54, 0x65, 0x78, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x23,
	0x0a, 0x0d, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x46, 0x0a, 0x05, 0x70, 0x61, 0x69, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x30, 0x2e, 0x73, 0x70, 0x65, 0x65, 0x63, 0x68, 0x6c, 0x79, 0x2e, 0x73, 0x61,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x61, 0x6c, 0x54, 0x65, 0x78, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x61, 0x69, 0x72, 0x52, 0x05, 0x70, 0x61, 0x69, 0x72, 0x73, 0x1a, 0x50, 0x0a, 0x0e, 0x45,
	0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x69, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x12, 0x2a, 0x0a, 0x11, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x74, 0x72, 0x75, 0x74,
	0x68, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x67, 0x72,
	0x6f, 0x75, 0x6e, 0x64, 0x54, 0x72, 0x75, 0x74, 0x68, 0x54, 0x65, 0x78, 0x74, 0x22, 0x2b, 0x0a,
	0x11, 0x45, 0x76, 0x61, 0x6c, 0x54, 0x65, 0x78, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x32, 0xaa, 0x01, 0x0a, 0x0c, 0x45,
	0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x50, 0x49, 0x12, 0x46, 0x0a, 0x05, 0x54,
	0x65, 0x78, 0x74, 0x73, 0x12, 0x1d, 0x2e, 0x73, 0x70, 0x65, 0x65, 0x63, 0x68, 0x6c, 0x79, 0x2e,
	0x73, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x70, 0x65, 0x65, 0x63, 0x68, 0x6c, 0x79, 0x2e, 0x73,
	0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x09, 0x45, 0x76, 0x61, 0x6c, 0x54, 0x65, 0x78, 0x74, 0x73,
	0x12, 0x21, 0x2e, 0x73, 0x70, 0x65, 0x65, 0x63, 0x68, 0x6c, 0x79, 0x2e, 0x73, 0x61, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x76, 0x61, 0x6c, 0x54, 0x65, 0x78, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x70, 0x65, 0x65, 0x63, 0x68, 0x6c, 0x79, 0x2e, 0x73,
	0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x61, 0x6c, 0x54, 0x65, 0x78, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x6b, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x2e, 0x73,
	0x70, 0x65, 0x65, 0x63, 0x68, 0x6c, 0x79, 0x2e, 0x73, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x42, 0x11,
	0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x50, 0x01, 0x5a, 0x15, 0x73, 0x70, 0x65, 0x65, 0x63, 0x68, 0x6c, 0x79, 0x2f, 0x73, 0x61,
	0x6c, 0x2f, 0x76, 0x31, 0x3b, 0x73, 0x61, 0x6c, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x53, 0x53, 0x58,
	0xaa, 0x02, 0x0f, 0x53, 0x70, 0x65, 0x65, 0x63, 0x68, 0x6c, 0x79, 0x2e, 0x53, 0x61, 0x6c, 0x2e,
	0x56, 0x31, 0xca, 0x02, 0x0f, 0x53, 0x70, 0x65, 0x65, 0x63, 0x68, 0x6c, 0x79, 0x5c, 0x53, 0x61,
	0x6c, 0x5c, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_speechly_sal_v1_evaluator_api_proto_rawDescOnce sync.Once
	file_speechly_sal_v1_evaluator_api_proto_rawDescData = file_speechly_sal_v1_evaluator_api_proto_rawDesc
)

func file_speechly_sal_v1_evaluator_api_proto_rawDescGZIP() []byte {
	file_speechly_sal_v1_evaluator_api_proto_rawDescOnce.Do(func() {
		file_speechly_sal_v1_evaluator_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_speechly_sal_v1_evaluator_api_proto_rawDescData)
	})
	return file_speechly_sal_v1_evaluator_api_proto_rawDescData
}

var file_speechly_sal_v1_evaluator_api_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_speechly_sal_v1_evaluator_api_proto_goTypes = []interface{}{
	(*TextsRequest)(nil),                    // 0: speechly.sal.v1.TextsRequest
	(*TextsResponse)(nil),                   // 1: speechly.sal.v1.TextsResponse
	(*EvalTextsRequest)(nil),                // 2: speechly.sal.v1.EvalTextsRequest
	(*EvalTextsResponse)(nil),               // 3: speechly.sal.v1.EvalTextsResponse
	(*EvalTextsRequest_EvaluationPair)(nil), // 4: speechly.sal.v1.EvalTextsRequest.EvaluationPair
}
var file_speechly_sal_v1_evaluator_api_proto_depIdxs = []int32{
	4, // 0: speechly.sal.v1.EvalTextsRequest.pairs:type_name -> speechly.sal.v1.EvalTextsRequest.EvaluationPair
	0, // 1: speechly.sal.v1.EvaluatorAPI.Texts:input_type -> speechly.sal.v1.TextsRequest
	2, // 2: speechly.sal.v1.EvaluatorAPI.EvalTexts:input_type -> speechly.sal.v1.EvalTextsRequest
	1, // 3: speechly.sal.v1.EvaluatorAPI.Texts:output_type -> speechly.sal.v1.TextsResponse
	3, // 4: speechly.sal.v1.EvaluatorAPI.EvalTexts:output_type -> speechly.sal.v1.EvalTextsResponse
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_speechly_sal_v1_evaluator_api_proto_init() }
func file_speechly_sal_v1_evaluator_api_proto_init() {
	if File_speechly_sal_v1_evaluator_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_speechly_sal_v1_evaluator_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TextsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_speechly_sal_v1_evaluator_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TextsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_speechly_sal_v1_evaluator_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvalTextsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_speechly_sal_v1_evaluator_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvalTextsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_speechly_sal_v1_evaluator_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvalTextsRequest_EvaluationPair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_speechly_sal_v1_evaluator_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_speechly_sal_v1_evaluator_api_proto_goTypes,
		DependencyIndexes: file_speechly_sal_v1_evaluator_api_proto_depIdxs,
		MessageInfos:      file_speechly_sal_v1_evaluator_api_proto_msgTypes,
	}.Build()
	File_speechly_sal_v1_evaluator_api_proto = out.File
	file_speechly_sal_v1_evaluator_api_proto_rawDesc = nil
	file_speechly_sal_v1_evaluator_api_proto_goTypes = nil
	file_speechly_sal_v1_evaluator_api_proto_depIdxs = nil
}
